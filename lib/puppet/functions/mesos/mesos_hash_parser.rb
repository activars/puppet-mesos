# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

#
# mesos_hash_parser.rb
#

# ---- original file header ----
#
# @summary
#   This function converts simple key-value structure to a Hash
#that is required by create_resources function
#
#
#
Puppet::Functions.create_function(:'mesos::mesos_hash_parser') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    

    # Only 1 argument should be passed
    if args.size < 1 || args.size > 2
      raise(Puppet::ParseError, "mesos_hash_parser(): Wrong number of args " + "given (#{args.size} for 1)")
    end

    # The argument should be a Hash
    if args[0].class != Hash
      raise(Puppet::ParseError, "mesos_hash_parser() accepts a Hash, you passed a " + args[0].class)
    end

    res = {}
    prefix = args[1] if args.size == 2
    args[0].each do |key, val|
      key = "#{prefix}_#{key}" if prefix
      res[key] = {
        "value" => val
      }
    end
    res
  
  end
end
